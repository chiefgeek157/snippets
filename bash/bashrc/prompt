# This is a collection of functions to customize the bash prompt.
# There are far more sophisticated capabilities, like the ohmy*sh series,
# but sometimes I just need a simple prompt on a utility or dev server.

# Useful for Python programmers
virtualenv_prompt() {
    # If not in a virtualenv, print nothing
    [[ "$VIRTUAL_ENV" == "" ]] && return

    # Distinguish between the shell where the virtualenv was activated
    # and its children
    local venv_name=$(shorten_path "$VIRTUAL_ENV")
    if typeset -f deactivate >/dev/null; then
        echo "[${venv_name}] "
    else
        echo "<${venv_name}> "
    fi
}

# Useful for AWS CLI
aws_prompt() {
    if [[ "$AWS_PROFILE" == "" ]]; then
        echo "[aws:none] "
    else
        echo "[aws:$AWS_PROFILE] "
    fi
}

# Shorten the path
#   /home/user1/project/dir/subdir/.hidden/another => ~/p/d/s/.h/another
shorten_path() {
    local path="$1"
    if [ -z "$path" ]; then
        path=$(pwd)
    fi
    echo $path | sed -E -e "s:^${HOME}:~:" -e "s:([^/\.])[^/]+/:\1/:g"
}

# Set useful config for the builtin git prompt
GIT_PS1_STATESEPARATOR=":"
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_DESCRIBE_STYLE="branch"
GIT_PS1_SHOWCOLORHINTS=1

# Disable the default virtualenv prompt decorator
VIRTUAL_ENV_DISABLE_PROMPT=1

# Set the prompt
# This one is a two-line variant that I like
# Note this depends on the colors function in this repo as well
#
#Since the prompt is long, I wrapped it using line continuation characters
# NOTE: the second to last line has an embedded newline so does NOT use the
#       line continuation character ` (backtick)
PS1="\[$WB\]╭─${debian_chroot:+\[$RB\]($debian_chroot)}`
    `\[$GB\]\u@\h\[$RS\]:`
    `\[$CB\]\$(shorten_path)\[$RS\]`
    `\[$YE\]\$(__git_ps1 '(%s)')`
    `\[$MA\]\$(virtualenv_prompt)`
    `\[$OR\]\$(aws_prompt)\n`
    `\[$WB\]╰─➤\[$RS\]  "
